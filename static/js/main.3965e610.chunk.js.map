{"version":3,"sources":["index.js"],"names":["Game","props","images","result","myData","forEach","item","index","push","thumbnailWidth","thumbnailHeight","tags","value","title","state","emoteList","list","this","console","log","lst","style","display","minHeight","width","border","overflow","enableImageSelection","rowHeight","React","Component","ReactDOM","render","document","getElementById"],"mappings":"k2hBAMQA,E,kDACJ,WAAYC,GAAQ,IAAD,sBACjB,cAAMA,GAEN,IAAMC,EAAS,GACTC,EAASC,EAJE,OAMED,EAAM,OAEdE,SAAQ,SAACC,EAAMC,GACxBL,EAAOM,KAAK,CACV,IAAOF,EAAK,GACZ,UAAaA,EAAK,GAClBG,eAAgB,GAChBC,gBAAiB,GACjBC,KAAM,CAAC,CAACC,MAAON,EAAK,GAAIO,MAAOP,EAAK,UAKxC,EAAKQ,MAAQ,CACXC,UAAWZ,EACXa,KAAMd,GArBS,E,mGAwDjB,OAAIe,KAAKH,MAAMC,UACNE,KAAKH,MAAMC,UAAX,OAEA,K,mCAKT,OAAIE,KAAKH,MAAMC,UACNE,KAAKH,MAAMC,UAAX,OAA+B,KAAK,GAEpC,W,kCAICR,GACV,OAAIU,KAAKH,MAAMC,UACNE,KAAKH,MAAMC,UAAX,OAA+BR,GAAO,GAEtC,W,+BAMT,OADAW,QAAQC,IAAIF,KAAKH,MAAMM,KAErB,qBAAKC,MAAO,CACVC,QAAS,QACTC,UAAW,MACXC,MAAO,OACPC,OAAQ,iBACRC,SAAU,QALZ,SAOE,cAAC,IAAD,CACExB,OAAQe,KAAKH,MAAME,KACnBW,sBAAsB,EACtBC,UAAW,Y,GA7FFC,IAAMC,WAkHzBC,IAASC,OACP,cAAChC,EAAD,IACAiC,SAASC,eAAe,U","file":"static/js/main.3965e610.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Gallery from 'react-grid-gallery';\nimport './index.css';\nimport myData from './tempData.json';\n  \n  class Game extends React.Component {\n    constructor(props) {\n      super(props);\n\n      const images = []\n      const result = myData;\n\n      const resultDict = result[\"emotes\"];\n      // var lst = [];\n      resultDict.forEach((item, index) => {\n        images.push({\n          \"src\": item[2],\n          \"thumbnail\": item[2],\n          thumbnailWidth: 75,\n          thumbnailHeight: 75,\n          tags: [{value: item[1], title: item[1]}]\n        })\n        // lst.push(<img src={item[2]} alt={item[1]} width=\"72\" height=\"72\"></img>)\n      });\n\n      this.state = {\n        emoteList: result,\n        list: images,\n      };\n    }\n\n    getEmoteList() {\n      \n\n      // this.setState ({\n      //   emoteList: result,\n      //   list: lst\n      // });\n\n      // const apiUrl = 'http://10.0.1.15:5000/'\n      // fetch(apiUrl)\n      //   .then(res => res.json())\n      //   .then(\n      //     (result) => {\n      //       var lst = []\n      //       const resultDict = result[\"emotes\"];\n      //       resultDict.forEach((item, index) => {\n      //       lst.push(<img src={item[2]} alt={item[1]} width=\"72\" height=\"72\"></img>)\n      //       })\n\n      //       this.setState ({\n      //         emoteList: result,\n      //         list: lst\n      //       });\n      //     },\n      //     (error) => {\n      //       console.log(error)\n      //     }\n      //   );\n    }\n\n    getEmoteDict() {\n      if (this.state.emoteList) {\n        return this.state.emoteList[\"emotes\"];\n      } else {\n        return [];\n      }\n    }\n\n    getInfoURL() {\n      if (this.state.emoteList) {\n        return this.state.emoteList[\"emotes\"][105][2];\n      } else {\n        return \"TEST!!\";\n      }\n    }\n\n    getInfoName(index) {\n      if (this.state.emoteList) {\n        return this.state.emoteList[\"emotes\"][index][1];\n      } else {\n        return \"TEST!!\";\n      }\n    }\n\n    render() {\n      console.log(this.state.lst);\n      return (\n        <div style={{\n          display: \"block\",\n          minHeight: \"1px\",\n          width: \"100%\",\n          border: \"1px solid #ddd\",\n          overflow: \"auto\"\n        }}>\n          <Gallery \n            images={this.state.list}\n            enableImageSelection={false} \n            rowHeight={100}\n            />\n        </div>\n      )\n    }\n\n    // render() {\n    //   return (\n    //     <div className=\"game\">\n    //         <ul>\n    //           {\n    //             this.state.list.map((item, index) => <li key={index}>{item} {this.getInfoName(index)}</li>)\n    //           }\n    //         </ul>\n    //     </div>\n    //   );\n    // }\n  }\n\n  // ========================================\n  \n  ReactDOM.render(\n    <Game />,\n    document.getElementById('root')\n  );"],"sourceRoot":""}