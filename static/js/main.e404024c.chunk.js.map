{"version":3,"sources":["index.js"],"names":["Game","props","state","emoteList","getEmoteList","list","fetch","then","res","json","result","lst","forEach","item","index","push","src","alt","width","height","setState","error","console","log","this","className","map","getInfoName","React","Component","ReactDOM","render","document","getElementById"],"mappings":"yMAIQA,G,wDACJ,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACXC,UAAW,EAAKC,eAChBC,KAAM,IAJS,E,2DAQH,IAAD,OAEbC,MADe,0BAEZC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MACC,SAACG,GACC,IAAIC,EAAM,GACSD,EAAM,OACdE,SAAQ,SAACC,EAAMC,GAC1BH,EAAII,KAAK,qBAAKC,IAAKH,EAAK,GAAII,IAAKJ,EAAK,GAAIK,MAAM,KAAKC,OAAO,WAG5D,EAAKC,SAAU,CACbjB,UAAWO,EACXL,KAAMM,OAGV,SAACU,GACCC,QAAQC,IAAIF,Q,qCAMlB,OAAIG,KAAKtB,MAAMC,UACNqB,KAAKtB,MAAMC,UAAX,OAEA,K,mCAKT,OAAIqB,KAAKtB,MAAMC,UACNqB,KAAKtB,MAAMC,UAAX,OAA+B,KAAK,GAEpC,W,kCAICW,GACV,OAAIU,KAAKtB,MAAMC,UACNqB,KAAKtB,MAAMC,UAAX,OAA+BW,GAAO,GAEtC,W,+BAID,IAAD,OACP,OACE,qBAAKW,UAAU,OAAf,SACI,6BAEID,KAAKtB,MAAMG,KAAKqB,KAAI,SAACb,EAAMC,GAAP,OAAiB,+BAAiBD,EAAjB,IAAwB,EAAKc,YAAYb,KAAhCA,c,GA7DzCc,IAAMC,YAuEzBC,IAASC,OACP,cAAC/B,EAAD,IACAgC,SAASC,eAAe,W","file":"static/js/main.e404024c.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n  \n  class Game extends React.Component {\n    constructor(props) {\n      super(props);\n      this.state = {\n        emoteList: this.getEmoteList(),\n        list: [],\n      };\n    }\n\n    getEmoteList() {\n      const apiUrl = 'http://10.0.1.15:5000/'\n      fetch(apiUrl)\n        .then(res => res.json())\n        .then(\n          (result) => {\n            var lst = []\n            const resultDict = result[\"emotes\"];\n            resultDict.forEach((item, index) => {\n            lst.push(<img src={item[2]} alt={item[1]} width=\"72\" height=\"72\"></img>)\n            })\n\n            this.setState ({\n              emoteList: result,\n              list: lst\n            });\n          },\n          (error) => {\n            console.log(error)\n          }\n        );\n    }\n\n    getEmoteDict() {\n      if (this.state.emoteList) {\n        return this.state.emoteList[\"emotes\"];\n      } else {\n        return [];\n      }\n    }\n\n    getInfoURL() {\n      if (this.state.emoteList) {\n        return this.state.emoteList[\"emotes\"][105][2];\n      } else {\n        return \"TEST!!\";\n      }\n    }\n\n    getInfoName(index) {\n      if (this.state.emoteList) {\n        return this.state.emoteList[\"emotes\"][index][1];\n      } else {\n        return \"TEST!!\";\n      }\n    }\n\n    render() {\n      return (\n        <div className=\"game\">\n            <ul>\n              {\n                this.state.list.map((item, index) => <li key={index}>{item} {this.getInfoName(index)}</li>)\n              }\n            </ul>\n        </div>\n      );\n    }\n  }\n  \n  // ========================================\n  \n  ReactDOM.render(\n    <Game />,\n    document.getElementById('root')\n  );\n  \n\n  // function calculateWinner(squares) {\n  //   const lines = [\n  //     [0, 1, 2],\n  //     [3, 4, 5],\n  //     [6, 7, 8],\n  //     [0, 3, 6],\n  //     [1, 4, 7],\n  //     [2, 5, 8],\n  //     [0, 4, 8],\n  //     [2, 4, 6],\n  //   ];\n\n  //   for (let i = 0; i < lines.length; i++) {\n  //     const [a, b, c] = lines[i];\n  //     if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n  //       return squares[a];\n  //     }\n  //   }\n\n  //   return null;\n  // }"],"sourceRoot":""}